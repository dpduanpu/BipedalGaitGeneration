(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
BeginPackage["BipedalLocomotion`FiveLink3D`", {"GlobalVariables`", "RigidBodyDynamics`", "BipedalLocomotion`", "BipedalLocomotion`Model`"}]

FiveLink3D::usage = "";
FiveLink3DP::usage = "";

FiveLink3DMeshOptions::usage = "";

Begin["`Private`"]


(* ::Input::Initialization:: *)
(* parameters *)
g = {0, 0, 9.81};
n\[Mu] = 2;

W = 0.15 \[DoubleStruckC][-3];
L1 = 0.275;
L2 = L1;
L3 = 0.05;
m1 = 0.875;
m2 =m1;
m3 = 5.5;

(* points of interest *)
foot = {0, 0, -L1};
trunk = {0, 0, L3};

left = {"left foot", foot};
right = {"right foot", foot};


(* ::Input::Initialization:: *)
(* pre-impact stance x[0-]/c- *)
stsw[s_, f_:{"left", "right"}] := If[StringMatchQ[s, "left", IgnoreCase->True], f, Reverse@f];


(* ::Input::Initialization:: *)
regopt[s_] := Module[{S, P, V, Pcon},
S = stsw[s, {left, right}];
P = <|0 -> BLFeet[First@S, {4, 5, 6}][1]|>;
V = vcon[s];
Pcon = ucon[s];
{"P" -> P, "V" -> V, "Pcon" -> Pcon, "S" -> S, "n\[Mu]" -> n\[Mu]}
];


(* ::Input::Initialization:: *)
fixcons[] := Module[{C},
(* don't expand certain constraints *)
C = {_, _, ((\[DoubleStruckB]')|\[DoubleStruckB])[__], __};
C = Flatten@Position[RigidBodyDynamics`Private`con, C];
RigidBodyDynamics`Private`con[[C, -2]] = False;

(* update con fcns & data *)
RBDSpatialFunctions[];
]


(* ::Input::Initialization:: *)
cm[s_, A_] := Module[{q, v, a, \[Theta]0T, C},
{q, v} = Partition[BLIndices[BLGetBipedBase[], "p", "n" -> {\[DoubleStruckQ], \[DoubleStruckV]}], mm];
q = "q" -> {q, Range@Length@q, 2A["np", s]};
v = "v" -> {v, Range@Length@v, A["np", s]};

(* polynomial scaling factors *)
\[Theta]0T = A["\[Theta]", s];

(* function specific parameters *)
a = <|"BLc" -> <|q, v|>, "BLc0T" -> <|"\[Theta]" -> \[Theta]0T|>, "BLSummary" -> <|regopt[Last@stsw[s]][[1;;3]]|>, "M" -> A["M", s]|>;

(* create parameters *)
C = BLContinuationParameters["q" -> qrm[s], "v" -> vrm[s], Association -> a,  "\[Mu]" -> n\[Mu]];

<|s -> C|>
];

viz[] := Module[{r},
r = {4, 5, 6};
BLDontDraw[{"torso"}];
BLRadius[0.09];
BLWidth[0.06];

<|
"axes" -> {1,2,3},

"scale" -> L1,

"poi" -> <|"left foot-poi" -> \[DoubleStruckB]["left foot", r, foot], "right foot-poi" -> \[DoubleStruckB]["right foot", r, foot], "trunk-poi" -> \[DoubleStruckB]["torso", r, trunk]|>,

"lc" -> <|"right foot-poi" -> LightGray, "right foot" -> LightGray, "right thigh" -> LightGray|>
|>
];

CreateModel[] := Module[{n\[Alpha]},
(* create joints *)
RBDJoint["base", {"px", "py", "pz", "rx", "ry" }];
RBDJoint["hip", {"rx", "ry"}];

(* create links *)
RBDLink["\[Theta]", Root, "m" -> 1, "S"-> "py"];

RBDLink["torso", Root, "m" -> m3, "com" -> {0, 0, 0, 0, 0, L3}, "I" -> {1/12, 1/12, 1/12}, "S"-> "base"];

RBDLink["left thigh", "torso", "m" -> m2, "com" -> {0, 0, 0, 0, 0, -L2/2}, "loc" -> {0, 0, -\[Pi], 0, W/2, 0}, "S"-> "hip", "I" -> {1/12, 1/12, 1/12}];

RBDLink["left foot", "left thigh", "m" -> m1, "com" -> {0, 0, 0, 0, 0, -L1/2}, "loc" -> {0, 0, 0, 0, 0, -L2}, "S"-> "ry"];

RBDLink["right thigh", "torso", "m" -> m2, "com" -> {0, 0, 0, 0, 0, -L2/2}, "loc" -> {0, 0, 0, 0, -W/2, 0}, "S"-> "hip", "I" -> {1/12, 1/12, 1/12}];

RBDLink["right foot", "right thigh", "m" -> m1, "com" -> {0, 0, 0, 0, 0, -L1/2}, "loc" -> {0, 0, 0, 0, 0, -L2}, "S"-> "ry"];

RBDCreateModel["g" -> g, "spat" -> False];
];


(* ::Input::Initialization:: *)
FiveLink3DMeshOptions[] := Module[{w, f, info, joints, links, A},
w = 0.025;
f = Function[x, StringRiffle[List@@x, "-"], Listable];

(* get all joint names *)
A = f[RBDGetValue[1, nq, "n" -> True]];
A = Association@Thread[A -> <|"mesh" -> <|"joint" -> <|"height" -> 1.1 w, "radius" -> w/2|>,"link" -> <|"width" -> w|>|>|>];

A
];


(* ::Input::Initialization:: *)
FiveLink3DP[cp_, opts:OptionsPattern[]] := FiveLink3DP[BLbiped["m[0]"], cp, opts]["R"];


(* ::Input::Initialization:: *)
FiveLink3D[n_:0, k_:2] := Module[{A, c, x, l, r},
(* model *)
CreateModel[];

(* virtual constraints *)
VHC[k];

(* constraints *)
A = {{\[DoubleStruckQ]["torso", "py"], \[DoubleStruckQ]["torso", "py"]}, {\[DoubleStruckQ]["torso", "rx"], \[DoubleStruckQ]["torso", "rx"]},
{\[DoubleStruckQ]["left thigh", "ry"], \[DoubleStruckQ]["right thigh", "ry"]}, {\[DoubleStruckQ]["left foot", "ry"], \[DoubleStruckQ]["right foot", "ry"]}};

A = BLA[A, {}];

l = BLRegime["left", regopt["left"]];
r = BLRegime["right", regopt["right"]];
c = Join[l, r];

(* pre-impact stance/post-impact mode *)
l = BLxT["left", "ST" -> right, "SW" -> left, "A" -> A];
r = BLxT["right", "ST" -> left, "SW" -> right, "A" -> A];
x = Join[l, r];

A = BLCreateBiped["FiveLink3D", c, x, viz[], {left, right}, <|"A" -> A|>];
c = Join[cm["left", A], cm["right", A]];
BLCreateContinuationParameters["right", c];

fixcons[];

BLCompileBiped[n]
];


(* ::Input::Initialization:: *)
End[]
EndPackage[]
